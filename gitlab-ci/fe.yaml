apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-__APPNAME
  namespace: __NAMESPACE
  annotations:
    volume.beta.kubernetes.io/storage-class: "managed-nfs-storage"
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi

---
apiVersion: v1
kind: Service
metadata:
  name: svc-__APPNAME
  namespace: __NAMESPACE
  labels:
    app: __APPNAME
spec:
  ports:
  - port: 7001
    targetPort: 7001
    protocol: TCP
  selector:
    app: __APPNAME

---

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: ingress-__APPNAME
  namespace: __NAMESPACE
  annotations:
    kubernetes.io/ingress.class: "nginx"
spec:
  tls:
  - hosts:
    - __APPNAME-__NAMESPACE.maihaoche.net
    secretName: maihaoche.net
  rules:
  - host: __APPNAME-__NAMESPACE.maihaoche.net
    http:
      paths:
      - path: /
        backend:
          serviceName: svc-__APPNAME
          servicePort: 7001

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: __APPNAME
  namespace: __NAMESPACE
spec:
  replicas: 1
  minReadySeconds: 5
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: __APPNAME
  template:
    metadata:
      labels:
        app: __APPNAME
    spec:
      containers:
      - name: __APPNAME
        image: __APPIMAGE
        imagePullPolicy: Always
        readinessProbe:
          tcpSocket:
            port: 7001
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
        volumeMounts:
          - name: logs
            mountPath: "/usr/src/app/logs"
#        resources:
#          requests:
#            memory: "300Mi"
#            cpu: "200m"
#          limits:
#            memory: "300Mi"
#            cpu: "500m"
      volumes:
      - name: logs
        persistentVolumeClaim:
          claimName: pvc-__APPNAME
      imagePullSecrets:
      - name: reg-in
      - name: reg-out

---
